重写: 在有一些子类要实现的方法中，方法名、传的参数、返回值跟父类中的方法一样，但具体实现又跟父类的不一样，这时候我们就需要重写父类的方法。
重载: 是在一个类中实现的，有多个同名方法，但参数不一样，包括参数类型、参数个数、还可以没有参数，总之每个重载的方法的参数必须不一样。最常用的地方就是构造器的重载。
重载是一个类的多态性表现,而方法重写是子类与父类的一种多态性表现。

重写与重载之间的区别
 区别点	重载方法	重写方法
参数列表	必须修改	一定不能修改
返回类型	可以修改	一定不能修改
  异常	可以修改	可以减少或删除，一定不能抛出新的或者更广的异常
  访问	可以修改	一定不能做更严格的限制（可以降低限制）
----------
向上转型:
子类引用的对象转换为父类类型称为向上转型。通俗地说就是是将子类对象转为父类对象。此处父类对象可以是接口。
向上转型时，子类单独定义的方法会丢失。

class Animal{
   public void move(){
      System.out.println("动物可以移动");
   }
}
 
class Dog extends Animal{
   public void move(){
      System.out.println("狗可以跑和走");
   }
   public void bark(){
      System.out.println("狗可以吠叫");
   }
}
 
public class TestDog{
   public static void main(String args[]){
      Animal a = new Animal();  // Animal 对象
      Animal b = new Dog();  // 向上转型: Dog 对象
 
      a.move();  // 执行 Animal 类的方法
      b.move();  // 执行 Dog 类的方法
      b.bark();  // 报错，向上转型时，子类单独定义的方法会丢失。
   }
}
----------
java中什么时候该用static修饰方法？有什么好处或者坏处？
当一个方法或者变量需要初始化加载，或者是经常被调用的时候可以加上static。
用static修饰的方法可以用类名直接调用，不用的一定要先实例化一个对象然后才可以调用
比如 person这个类里面有一个方法public static add(){}
那么可以直接用person类调用 person.add();
比如 public add(){}
那么先要person p=new person();
然后用p.add();
坏处：初始化加载，比较占内存，所以不经常用的方法，不建议加此关键字。
注意：在一个static 方法中引用任何实例变量都是非法的。